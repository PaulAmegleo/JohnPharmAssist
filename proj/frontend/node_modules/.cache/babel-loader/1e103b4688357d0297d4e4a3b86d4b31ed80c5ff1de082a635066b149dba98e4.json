{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useParams}from'react-router-dom';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const MedsDetails=()=>{const{id}=useParams();// Access the 'id' parameter from the URL\nconst[medicine,setMedicine]=useState(null);useEffect(()=>{const fetchMedicineDetails=async()=>{try{const response=await axios.get(\"http://127.0.0.1:8000/app/meds/\".concat(id,\"/\"));// Fetch medicine details by ID\nsetMedicine(response.data);// Set the fetched medicine details\n}catch(error){console.error('Error fetching medicine details:',error);}};fetchMedicineDetails();},[id]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Medicine Details\"}),medicine?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Medicine ID: \",medicine.medId]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Medicine Name: \",medicine.medName]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Generic Name: \",medicine.genericName]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Medicine Type: \",medicine.medType]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Manufacturer: \",medicine.manufacturer]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Dosage: \",medicine.dosage]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Age Group: \",medicine.ageGroup]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Formulation: \",medicine.formulation]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Net Content: \",medicine.netContent]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Indication: \",medicine.indication]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Side Effects: \",medicine.sideEffects]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Availability: \",medicine.availability?'Available':'Not Available']}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Image URL: \",medicine.image]})]}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"})]});};export default MedsDetails;","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsx","_jsx","jsxs","_jsxs","MedsDetails","id","medicine","setMedicine","fetchMedicineDetails","response","get","concat","data","error","console","children","medId","medName","genericName","medType","manufacturer","dosage","ageGroup","formulation","netContent","indication","sideEffects","availability","image"],"sources":["C:/Users/Ivahnn/OneDrive/Desktop/FINALJOHNPHARMASSIST/api/proj/frontend/src/components/MedsDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst MedsDetails = () => {\r\n  const { id } = useParams(); // Access the 'id' parameter from the URL\r\n  const [medicine, setMedicine] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchMedicineDetails = async () => {\r\n      try {\r\n        const response = await axios.get(`http://127.0.0.1:8000/app/meds/${id}/`); // Fetch medicine details by ID\r\n        setMedicine(response.data); // Set the fetched medicine details\r\n      } catch (error) {\r\n        console.error('Error fetching medicine details:', error);\r\n      }\r\n    };\r\n\r\n    fetchMedicineDetails();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Medicine Details</h2>\r\n      {medicine ? (\r\n        <div>\r\n          <p>Medicine ID: {medicine.medId}</p>\r\n          <p>Medicine Name: {medicine.medName}</p>\r\n          <p>Generic Name: {medicine.genericName}</p>\r\n          <p>Medicine Type: {medicine.medType}</p>\r\n          <p>Manufacturer: {medicine.manufacturer}</p>\r\n          <p>Dosage: {medicine.dosage}</p>\r\n          <p>Age Group: {medicine.ageGroup}</p>\r\n          <p>Formulation: {medicine.formulation}</p>\r\n          <p>Net Content: {medicine.netContent}</p>\r\n          <p>Indication: {medicine.indication}</p>\r\n          <p>Side Effects: {medicine.sideEffects}</p>\r\n          <p>Availability: {medicine.availability ? 'Available' : 'Not Available'}</p>\r\n          <p>Image URL: {medicine.image}</p>\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedsDetails;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAEC,EAAG,CAAC,CAAGP,SAAS,CAAC,CAAC,CAAE;AAC5B,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAE9CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAV,KAAK,CAACW,GAAG,mCAAAC,MAAA,CAAmCN,EAAE,KAAG,CAAC,CAAE;AAC3EE,WAAW,CAACE,QAAQ,CAACG,IAAI,CAAC,CAAE;AAC9B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,CAAEA,KAAK,CAAC,CAC1D,CACF,CAAC,CAEDL,oBAAoB,CAAC,CAAC,CACxB,CAAC,CAAE,CAACH,EAAE,CAAC,CAAC,CAER,mBACEF,KAAA,QAAAY,QAAA,eACEd,IAAA,OAAAc,QAAA,CAAI,kBAAgB,CAAI,CAAC,CACxBT,QAAQ,cACPH,KAAA,QAAAY,QAAA,eACEZ,KAAA,MAAAY,QAAA,EAAG,eAAa,CAACT,QAAQ,CAACU,KAAK,EAAI,CAAC,cACpCb,KAAA,MAAAY,QAAA,EAAG,iBAAe,CAACT,QAAQ,CAACW,OAAO,EAAI,CAAC,cACxCd,KAAA,MAAAY,QAAA,EAAG,gBAAc,CAACT,QAAQ,CAACY,WAAW,EAAI,CAAC,cAC3Cf,KAAA,MAAAY,QAAA,EAAG,iBAAe,CAACT,QAAQ,CAACa,OAAO,EAAI,CAAC,cACxChB,KAAA,MAAAY,QAAA,EAAG,gBAAc,CAACT,QAAQ,CAACc,YAAY,EAAI,CAAC,cAC5CjB,KAAA,MAAAY,QAAA,EAAG,UAAQ,CAACT,QAAQ,CAACe,MAAM,EAAI,CAAC,cAChClB,KAAA,MAAAY,QAAA,EAAG,aAAW,CAACT,QAAQ,CAACgB,QAAQ,EAAI,CAAC,cACrCnB,KAAA,MAAAY,QAAA,EAAG,eAAa,CAACT,QAAQ,CAACiB,WAAW,EAAI,CAAC,cAC1CpB,KAAA,MAAAY,QAAA,EAAG,eAAa,CAACT,QAAQ,CAACkB,UAAU,EAAI,CAAC,cACzCrB,KAAA,MAAAY,QAAA,EAAG,cAAY,CAACT,QAAQ,CAACmB,UAAU,EAAI,CAAC,cACxCtB,KAAA,MAAAY,QAAA,EAAG,gBAAc,CAACT,QAAQ,CAACoB,WAAW,EAAI,CAAC,cAC3CvB,KAAA,MAAAY,QAAA,EAAG,gBAAc,CAACT,QAAQ,CAACqB,YAAY,CAAG,WAAW,CAAG,eAAe,EAAI,CAAC,cAC5ExB,KAAA,MAAAY,QAAA,EAAG,aAAW,CAACT,QAAQ,CAACsB,KAAK,EAAI,CAAC,EAC/B,CAAC,cAEN3B,IAAA,MAAAc,QAAA,CAAG,YAAU,CAAG,CACjB,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAX,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}