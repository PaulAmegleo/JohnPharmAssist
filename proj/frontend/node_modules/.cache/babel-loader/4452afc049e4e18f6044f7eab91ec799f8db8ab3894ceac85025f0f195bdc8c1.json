{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{Link}from'react-router-dom';import\"./MedsList.css\";import Medicineitem from'./Medicineitem';// Assuming Medicineitem is your component\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const MedsList=()=>{const[medicines,setMedicines]=useState([]);useEffect(()=>{const fetchMeds=async()=>{try{const response=await axios.get('http://127.0.0.1:8000/app/meds/');setMedicines(response.data);}catch(error){console.error('Error fetching medicines:',error);}};fetchMeds();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"cardsmed\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"MEDICINE INFORMATION\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cards__container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"cards__wrapper\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"cards__items\",children:medicines.map(medicine=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Medicineitem,{src:medicine.image// Replace 'src' with the image field in your model\n,text:medicine.medName// Replace 'text' with the name field in your model\n,label:\"Medicine\"// Label or any specific information\n,path:\"/meds/\".concat(medicine.medId)// Path based on the ID\n})},medicine.medId))})})}),/*#__PURE__*/_jsx(Link,{to:\"/add\",className:\"link-button\",children:\"Add New Medicine\"})]});};export default MedsList;","map":{"version":3,"names":["React","useState","useEffect","axios","Link","Medicineitem","jsx","_jsx","jsxs","_jsxs","MedsList","medicines","setMedicines","fetchMeds","response","get","data","error","console","className","children","map","medicine","src","image","text","medName","label","path","concat","medId","to"],"sources":["C:/Users/Ivahnn/OneDrive/Desktop/FINALJOHNPHARMASSIST/api/proj/frontend/src/components/MedsList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'; \r\nimport \"./MedsList.css\";\r\nimport Medicineitem from './Medicineitem'; // Assuming Medicineitem is your component\r\n\r\nconst MedsList = () => {\r\n  const [medicines, setMedicines] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchMeds = async () => {\r\n      try {\r\n        const response = await axios.get('http://127.0.0.1:8000/app/meds/');\r\n        setMedicines(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching medicines:', error);\r\n      }\r\n    };\r\n\r\n    fetchMeds();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"cardsmed\">\r\n      <h1>MEDICINE INFORMATION</h1>\r\n      <div className=\"cards__container\">\r\n        <div className=\"cards__wrapper\">\r\n          <ul className=\"cards__items\">\r\n            {medicines.map(medicine => (\r\n              <li key={medicine.medId}>\r\n                <Medicineitem\r\n                  src={medicine.image} // Replace 'src' with the image field in your model\r\n                  text={medicine.medName} // Replace 'text' with the name field in your model\r\n                  label=\"Medicine\" // Label or any specific information\r\n                  path={`/meds/${medicine.medId}`} // Path based on the ID\r\n                />\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n\r\n      <Link to=\"/add\" className=\"link-button\">\r\n        Add New Medicine\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedsList;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,gBAAgB,CACvB,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAE9CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CAAC,iCAAiC,CAAC,CACnEH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAAC,CAC7B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CACF,CAAC,CAEDJ,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEJ,KAAA,QAAKU,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBb,IAAA,OAAAa,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7Bb,IAAA,QAAKY,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/Bb,IAAA,QAAKY,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAC7Bb,IAAA,OAAIY,SAAS,CAAC,cAAc,CAAAC,QAAA,CACzBT,SAAS,CAACU,GAAG,CAACC,QAAQ,eACrBf,IAAA,OAAAa,QAAA,cACEb,IAAA,CAACF,YAAY,EACXkB,GAAG,CAAED,QAAQ,CAACE,KAAO;AAAA,CACrBC,IAAI,CAAEH,QAAQ,CAACI,OAAS;AAAA,CACxBC,KAAK,CAAC,UAAW;AAAA,CACjBC,IAAI,UAAAC,MAAA,CAAWP,QAAQ,CAACQ,KAAK,CAAI;AAAA,CAClC,CAAC,EANKR,QAAQ,CAACQ,KAOd,CACL,CAAC,CACA,CAAC,CACF,CAAC,CACH,CAAC,cAENvB,IAAA,CAACH,IAAI,EAAC2B,EAAE,CAAC,MAAM,CAACZ,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAC,kBAExC,CAAM,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAV,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}